{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/apilaashyoharan/Documents/Waterloo-Guesser/app/api/floorplans/route.ts"],"sourcesContent":["import { NextRequest } from 'next/server';\nimport { MongoClient } from 'mongodb';\n\nconst uri = process.env.MONGODB_URI || '';\nconst dbName = process.env.MONGODB_DB || '';\n\nexport const runtime = 'nodejs';\n\nexport async function GET(req: NextRequest) {\n  try {\n    const client = new MongoClient(uri);\n    await client.connect();\n    const db = client.db(dbName);\n    const floorplans = await db.collection('floorplans').find({}).toArray();\n    const buildings = await db.collection('buildings').find({}).toArray();\n    await client.close();\n    return new Response(\n      JSON.stringify({ floorplans, buildings }),\n      { status: 200, headers: { 'Content-Type': 'application/json' } }\n    );\n  } catch (err) {\n    return new Response(\n      JSON.stringify({ error: 'Server error', details: String(err) }),\n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;AACA;;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW,IAAI;AACvC,MAAM,SAAS,QAAQ,GAAG,CAAC,UAAU,IAAI;AAElC,MAAM,UAAU;AAEhB,eAAe,IAAI,GAAgB;IACxC,IAAI;QACF,MAAM,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC;QAC/B,MAAM,OAAO,OAAO;QACpB,MAAM,KAAK,OAAO,EAAE,CAAC;QACrB,MAAM,aAAa,MAAM,GAAG,UAAU,CAAC,cAAc,IAAI,CAAC,CAAC,GAAG,OAAO;QACrE,MAAM,YAAY,MAAM,GAAG,UAAU,CAAC,aAAa,IAAI,CAAC,CAAC,GAAG,OAAO;QACnE,MAAM,OAAO,KAAK;QAClB,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;YAAE;YAAY;QAAU,IACvC;YAAE,QAAQ;YAAK,SAAS;gBAAE,gBAAgB;YAAmB;QAAE;IAEnE,EAAE,OAAO,KAAK;QACZ,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;YAAE,OAAO;YAAgB,SAAS,OAAO;QAAK,IAC7D;YAAE,QAAQ;YAAK,SAAS;gBAAE,gBAAgB;YAAmB;QAAE;IAEnE;AACF","debugId":null}}]
}