{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/apilaashyoharan/Documents/Waterloo-Guesser/app/api/validateCoordinate/route.ts"],"sourcesContent":["import { NextRequest } from 'next/server';\nimport { MongoClient, ObjectId } from 'mongodb';\n\nconst uri = process.env.MONGODB_URI || '';\nconst dbName = process.env.MONGODB_DB || '';\nif (!uri || !dbName) {\n  console.error('Missing MongoDB env variables:', { uri, dbName });\n}\n\nexport async function POST(req: NextRequest) {\n  try {\n    const body = await req.json();\n    const { xCoor, yCoor, id } = body;\n    if (!id || xCoor == null || yCoor == null) {\n      return new Response(JSON.stringify({ error: 'Missing required fields' }), { status: 400 });\n    }\n    const client = new MongoClient(uri || '');\n    await client.connect();\n    const db = client.db(dbName || '');\n    const collection = db.collection('base_locations');\n    const doc = await collection.findOne({ _id: new ObjectId(id) });\n    await client.close();\n    if (!doc) {\n      return new Response(JSON.stringify({ error: 'Location not found' }), { status: 404 });\n    }\n    // Calculate points based on distance (simple Euclidean for now)\n    const dx = (xCoor - doc.xCoordinate);\n    const dy = (yCoor - doc.yCoordinate);\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    // Example scoring: max 100, lose 20 per 0.1 distance\n    const points = Math.max(0, Math.round(100 - distance * 200));\n    return new Response(JSON.stringify({\n      xCoor: doc.xCoordinate,\n      yCoor: doc.yCoordinate,\n      points\n    }), { status: 200 });\n  } catch (err) {\n    return new Response(JSON.stringify({ error: 'Server error', details: String(err) }), { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AACA;;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW,IAAI;AACvC,MAAM,SAAS,QAAQ,GAAG,CAAC,UAAU,IAAI;AACzC,IAAI,CAAC,OAAO,CAAC,QAAQ;IACnB,QAAQ,KAAK,CAAC,kCAAkC;QAAE;QAAK;IAAO;AAChE;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG;QAC7B,IAAI,CAAC,MAAM,SAAS,QAAQ,SAAS,MAAM;YACzC,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;gBAAE,OAAO;YAA0B,IAAI;gBAAE,QAAQ;YAAI;QAC1F;QACA,MAAM,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,OAAO;QACtC,MAAM,OAAO,OAAO;QACpB,MAAM,KAAK,OAAO,EAAE,CAAC,UAAU;QAC/B,MAAM,aAAa,GAAG,UAAU,CAAC;QACjC,MAAM,MAAM,MAAM,WAAW,OAAO,CAAC;YAAE,KAAK,IAAI,uGAAA,CAAA,WAAQ,CAAC;QAAI;QAC7D,MAAM,OAAO,KAAK;QAClB,IAAI,CAAC,KAAK;YACR,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;gBAAE,OAAO;YAAqB,IAAI;gBAAE,QAAQ;YAAI;QACrF;QACA,gEAAgE;QAChE,MAAM,KAAM,QAAQ,IAAI,WAAW;QACnC,MAAM,KAAM,QAAQ,IAAI,WAAW;QACnC,MAAM,WAAW,KAAK,IAAI,CAAC,KAAK,KAAK,KAAK;QAC1C,qDAAqD;QACrD,MAAM,SAAS,KAAK,GAAG,CAAC,GAAG,KAAK,KAAK,CAAC,MAAM,WAAW;QACvD,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YACjC,OAAO,IAAI,WAAW;YACtB,OAAO,IAAI,WAAW;YACtB;QACF,IAAI;YAAE,QAAQ;QAAI;IACpB,EAAE,OAAO,KAAK;QACZ,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,OAAO;YAAgB,SAAS,OAAO;QAAK,IAAI;YAAE,QAAQ;QAAI;IACrG;AACF","debugId":null}}]
}